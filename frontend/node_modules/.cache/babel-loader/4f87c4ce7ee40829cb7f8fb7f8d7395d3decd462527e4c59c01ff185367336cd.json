{"ast":null,"code":"var _jsxFileName = \"J:\\\\E-Comm-Dashboard\\\\frontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const navigate = useNavigate();\n  use;\n  const handleLogin = async () => {\n    let result = await fetch(\"http://localhost:5000/login\", {\n      method: 'post',\n      body: JSON.stringify({\n        email,\n        password\n      }),\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n    result = await result.json();\n    console.warn(result);\n    if (result.name) {\n      localStorage.setItem('user', JSON.stringify(result));\n      navigate('/');\n    } else {\n      alert('Please Enter correct details');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"inputBox\",\n      placeholder: \"Enter Email\",\n      onChange: e => setEmail(e.target.value),\n      value: email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      className: \"inputBox\",\n      placeholder: \"Enter Password\",\n      onChange: e => setPassword(e.target.value),\n      value: password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      type: \"button\",\n      className: \"appButton\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"TFywpMbHzUen8wcLvPZJLP5PlEQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","navigate","use","handleLogin","result","fetch","method","body","JSON","stringify","headers","json","console","warn","name","localStorage","setItem","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","value","onClick","_c","$RefreshReg$"],"sources":["J:/E-Comm-Dashboard/frontend/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n  const[email,setEmail]=React.useState('');\r\n  const[password,setPassword]=React.useState('');\r\n  const navigate=useNavigate();\r\n\r\n  use\r\n\r\n  const handleLogin=async()=>{\r\n    \r\n    let result= await fetch(\"http://localhost:5000/login\",{\r\n      method:'post',\r\n      body:JSON.stringify({email,password}),\r\n      headers:{\r\n        'content-type':'application/json'\r\n      }\r\n    });\r\n    result=await result.json();\r\n    console.warn(result);\r\n    if(result.name){\r\n      localStorage.setItem('user',JSON.stringify(result));\r\n      navigate('/')\r\n    }\r\n    else{\r\n      alert('Please Enter correct details')\r\n    }\r\n  }\r\n  return (\r\n    <div className='login'>\r\n      <h1>Login</h1>\r\n      <input type=\"text\"\r\n      className='inputBox' placeholder='Enter Email' onChange={(e)=>setEmail(e.target.value)} value={email}/>\r\n      <input type=\"password\"\r\n      className='inputBox' placeholder='Enter Password'  onChange={(e)=>setPassword(e.target.value)} value={password}/>\r\n      <button  onClick={handleLogin} type=\"button\" className='appButton'>Login</button>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAK,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACR,KAAK,CAACC,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAK,CAACQ,QAAQ,EAACC,WAAW,CAAC,GAACV,KAAK,CAACC,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMU,QAAQ,GAACT,WAAW,CAAC,CAAC;EAE5BU,GAAG;EAEH,MAAMC,WAAW,GAAC,MAAAA,CAAA,KAAS;IAEzB,IAAIC,MAAM,GAAE,MAAMC,KAAK,CAAC,6BAA6B,EAAC;MACpDC,MAAM,EAAC,MAAM;MACbC,IAAI,EAACC,IAAI,CAACC,SAAS,CAAC;QAACZ,KAAK;QAACE;MAAQ,CAAC,CAAC;MACrCW,OAAO,EAAC;QACN,cAAc,EAAC;MACjB;IACF,CAAC,CAAC;IACFN,MAAM,GAAC,MAAMA,MAAM,CAACO,IAAI,CAAC,CAAC;IAC1BC,OAAO,CAACC,IAAI,CAACT,MAAM,CAAC;IACpB,IAAGA,MAAM,CAACU,IAAI,EAAC;MACbC,YAAY,CAACC,OAAO,CAAC,MAAM,EAACR,IAAI,CAACC,SAAS,CAACL,MAAM,CAAC,CAAC;MACnDH,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,MACG;MACFgB,KAAK,CAAC,8BAA8B,CAAC;IACvC;EACF,CAAC;EACD,oBACEvB,OAAA;IAAKwB,SAAS,EAAC,OAAO;IAAAC,QAAA,gBACpBzB,OAAA;MAAAyB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACd7B,OAAA;MAAO8B,IAAI,EAAC,MAAM;MAClBN,SAAS,EAAC,UAAU;MAACO,WAAW,EAAC,aAAa;MAACC,QAAQ,EAAGC,CAAC,IAAG7B,QAAQ,CAAC6B,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAACA,KAAK,EAAEhC;IAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACvG7B,OAAA;MAAO8B,IAAI,EAAC,UAAU;MACtBN,SAAS,EAAC,UAAU;MAACO,WAAW,EAAC,gBAAgB;MAAEC,QAAQ,EAAGC,CAAC,IAAG3B,WAAW,CAAC2B,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAACA,KAAK,EAAE9B;IAAS;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACjH7B,OAAA;MAASoC,OAAO,EAAE3B,WAAY;MAACqB,IAAI,EAAC,QAAQ;MAACN,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE9E,CAAC;AAEV,CAAC;AAAA3B,EAAA,CArCKD,KAAK;EAAA,QAGMH,WAAW;AAAA;AAAAuC,EAAA,GAHtBpC,KAAK;AAuCX,eAAeA,KAAK;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}